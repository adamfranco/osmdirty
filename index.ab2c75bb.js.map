{"mappings":"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","sources":["node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/util.js","node_modules/ol/src/has.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/Object.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/geom/Circle.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/interaction/Draw.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/source/TileDebug.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","main.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js"],"sourcesContent":["/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = horizontalTextAlign(\n      textIsArray ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle',\n};\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/GeometryType.js\").default}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === Mode.POLYGON\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === Mode.CIRCLE\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === Mode.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([\n                  coordinates[0].concat([coordinates[0][0]]),\n                ]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ =\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(\n        function () {\n          this.handlePointerMove_(\n            new MapBrowserEvent(\n              MapBrowserEventType.POINTERMOVE,\n              event.map,\n              event.originalEvent,\n              false,\n              event.frameState\n            )\n          );\n        }.bind(this),\n        this.dragVertexDelay_\n      );\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === Mode.POINT)\n        ) {\n          if (this.atFinish_(event.pixel)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event.coordinate);\n    } else {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n    }\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        at = true;\n      } else if (mode === Mode.CIRCLE) {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (\n      geometry.getType() === GeometryType.POLYGON &&\n      this.mode_ !== Mode.POLYGON\n    ) {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n        const finishCoordinate = this.finishCoordinate_.slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.createOrUpdateSketchPoint_(finishCoordinate);\n      }\n      this.geometryFunction_(coordinates, geometry, projection);\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n      }\n    } else if (mode === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      if (coordinates.length >= 2) {\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\n        coordinates[coordinates.length - 1] = finishCoordinate;\n        this.createOrUpdateSketchPoint_(finishCoordinate);\n      }\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n\n    if (coordinates.length === 1) {\n      this.abortDrawing();\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === Mode.POLYGON) {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function (coordinates, opt_geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry\n      ? /** @type {Polygon} */ (opt_geometry)\n      : fromCircle(new Circle(center), opt_sides);\n\n    let angle = opt_angle;\n    if (!opt_angle && opt_angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan2(y, x);\n    }\n    makeRegular(geometry, center, radius, angle);\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, opt_geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    let geometry = opt_geometry;\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n      return Mode.POINT;\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n      return Mode.LINE_STRING;\n    case GeometryType.POLYGON:\n    case GeometryType.MULTI_POLYGON:\n      return Mode.POLYGON;\n    case GeometryType.CIRCLE:\n      return Mode.CIRCLE;\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [opt_options] Debug tile options.\n   */\n  constructor(opt_options) {\n    /**\n     * @type {Options}\n     */\n    const options = opt_options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","import {Map, View} from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport Draw from 'ol/interaction/Draw';\nimport {OSM, TileDebug, Vector as VectorSource} from 'ol/source';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport {createXYZ} from 'ol/tilegrid';\n\nconst source = new VectorSource({wrapX: false});\n\nconst vector = new VectorLayer({\n  source: source,\n});\n\nconst map = new Map({\n  target: 'map',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    new TileLayer({\n      source: new TileDebug(),\n    }),\n    vector\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst createButton = document.getElementById('create');\nconst clearButton = document.getElementById('clear');\nconst markdirtyButton = document.getElementById('markdirty');\nconst minz = document.getElementById('minz');\nconst maxz = document.getElementById('maxz');\n\nconst status = document.getElementById('status');\nconst status_current = document.getElementById('status-current');\nconst status_total = document.getElementById('status-total');\n\nlet draw; // global so we can remove it later\nfunction addPolygon() {\n  draw = new Draw({\n    source: source,\n    type: \"Polygon\",\n  });\n  draw.on('drawend', function () {\n    map.removeInteraction(draw);\n    markdirtyButton.disabled = false;\n  });\n  map.addInteraction(draw);\n  createButton.disabled = true;\n  clearButton.disabled = false;\n  markdirtyButton.disabled = true;\n}\n\nfunction clearPolygon() {\n  source.clear();\n  if (draw) {\n    draw.abortDrawing();\n    map.removeInteraction(draw);\n  }\n  createButton.disabled = false;\n  clearButton.disabled = true;\n  markdirtyButton.disabled = true;\n}\n\ncreateButton.onclick = addPolygon;\nclearButton.onclick = clearPolygon;\n// Start with no polygon on load.\nclearPolygon();\n\n// Constrain zoom ranges to valid.\nminz.onchange = function () {\n  if (parseInt(minz.value) > parseInt(maxz.value)) {\n    maxz.value = parseInt(minz.value);\n  }\n}\nmaxz.onchange = function () {\n  if (parseInt(minz.value) > parseInt(maxz.value)) {\n    minz.value = parseInt(maxz.value);\n  }\n}\n\nfunction getTilesForFeature(feature, minz, maxz) {\n  var tiles = [];\n  var grid = createXYZ();\n  // Build a list of all possible tiles that might intersect the full bbox of\n  // the feature.\n  var geometry = feature.getGeometry();\n  for (var z = minz; z <= maxz; z = z + 1) {\n    grid.forEachTileCoord(geometry.getExtent(), z, function (tile_coord) {\n      tiles.push(tile_coord);\n    });\n  }\n  console.log('before filtering', tiles);\n  // Filter out tiles that don't actually intersect the feature.\n  return tiles.filter(function (tile_coord) {\n    return geometry.intersectsExtent(grid.getTileCoordExtent(tile_coord))\n  });\n}\n\nmarkdirtyButton.onclick = function() {\n  for (var feature of source.getFeatures()) {\n    var tiles = getTilesForFeature(feature, parseInt(minz.value), parseInt(maxz.value));\n    console.log('after filtering', tiles);\n    if (tiles.length > 1000) {\n      alert(\"You're trying to mark \" + tiles.length + \" tiles as dirty. Reduce the zoom range or area to keep it under 1,000.\");\n    }\n    else if (confirm(\"This will mark \" + tiles.length + \" tiles as dirty. Are you sure that you want to fire off this many requests?\")) {\n      markTilesDirty(tiles);\n    }\n  }\n}\n\nfunction markTilesDirty(tiles) {\n  status.style.visibility = 'visible';\n  status_total.innerHTML = tiles.length;\n  markNextTileDirty(tiles, 0);\n}\n\nfunction markNextTileDirty(tiles, i) {\n  if (i >= tiles.length) {\n    status.style.visibility = 'hidden';\n  } else {\n    status_current.innerHTML = i + 1;\n    var tile = tiles[i];\n    var baseUrl = 'https://a.tile.openstreetmap.org/' + tile[0] + '/' + tile[1] + '/' + tile[2] + '.png';\n    var dirtyUrl = baseUrl + '/dirty';\n    fetch(dirtyUrl)\n    .then(function(response) {\n      if (!response.ok) {\n        console.log(response);\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      setTimeout(markNextTileDirty, 500, tiles, i + 1);\n    });\n\n  }\n}\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n"],"names":["$198f17545c774c60$export$2e2bcd8739ae039","Disposable","this","disposed","prototype","dispose","disposeInternal","$242d04b4abe8e74a$export$4e734a3b32fb971b","a","b","$242d04b4abe8e74a$export$8a3786cc03fdb777","arr","target","direction","n","length","i","$242d04b4abe8e74a$export$292cfa960964f0e0","begin","end","tmp","$242d04b4abe8e74a$export$8b58be045bf06082","data","extension","Array","isArray","$242d04b4abe8e74a$export$e9bab7fafb253603","arr1","arr2","len1","$e8bb49b0723cf385$export$22e23a2304399231","$e8bb49b0723cf385$export$8f11cee4bdc7e668","$e8bb49b0723cf385$export$1cd1943b3a73bbe8","$b72bee802ee7837c$export$817eb92a8194bab0","Error","$b72bee802ee7837c$var$uidCounter_","$b72bee802ee7837c$export$5e82334337e0f204","obj","ol_uid","String","$b72bee802ee7837c$export$a4ad2735b021c132","$557f882b5755ab40$var$ua","navigator","userAgent","toLowerCase","$557f882b5755ab40$export$8442bdfd18b7b8a6","indexOf","$557f882b5755ab40$export$39dfd62a25e0fe93","match","$557f882b5755ab40$export$76c0a3b101d93136","$557f882b5755ab40$export$6b83a0446fc26f94","devicePixelRatio","$557f882b5755ab40$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$557f882b5755ab40$export$716f8695eedb9bad","Image","decode","$557f882b5755ab40$export$f751ce96c6c4e4fc","passive","options","Object","defineProperty","get","window","addEventListener","removeEventListener","error","$d51b57da984548f6$export$2e2bcd8739ae039","_super","AssertionError","code","_this","message","split","call","name","$d51b57da984548f6$var$__extends","$260eb39d4574b27d$export$a7a9523472993e97","assertion","errorCode","$d51b57da984548f6$exports","default","$67dae15869f57ba2$var$transformStringDiv","$67dae15869f57ba2$export$adaa4cf7ef1b65be","transform","c","d","e","f","$67dae15869f57ba2$export$5635d7ef4b8fee1c","coordinate","x","y","$67dae15869f57ba2$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$67dae15869f57ba2$export$bd70ea2a93c0fa4","source","mat","det","$67dae15869f57ba2$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$42857dc1e4e39ae1$export$2e2bcd8739ae039","$2034d68cc04dd519$export$2e2bcd8739ae039","$09aee13076acae13$export$8aceca7c77505534","coordinates","extent","$09aee13076acae13$export$fe201bb3bbe031e9","ii","$09aee13076acae13$export$1f820e3920fa5715","$09aee13076acae13$export$ab1029bcae9ddb4a","value","opt_extent","$09aee13076acae13$export$9cd59f9826255e47","slice","$09aee13076acae13$export$cbe64c389534206f","dx","dy","$09aee13076acae13$export$ac68c24d37ca240f","$09aee13076acae13$export$805bdfd6d6690e97","$09aee13076acae13$export$be866b1e0809b17e","extent1","extent2","$09aee13076acae13$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$09aee13076acae13$export$958e3e1a02eac4b6","$09aee13076acae13$export$3e2152b047719fa1","$09aee13076acae13$export$be0ab0bf96ca59ca","flatCoordinates","offset","stride","$09aee13076acae13$export$30570204156ffd18","$09aee13076acae13$export$e9bab7fafb253603","$09aee13076acae13$export$f1dab130b92b85a9","min","max","$09aee13076acae13$export$f9ed8a3d123a08e2","callback","val","$09aee13076acae13$export$8d09f5e2e1bf560d","$09aee13076acae13$export$e77c1cf70445e168","$09aee13076acae13$export$b84fa077c8b05295","$09aee13076acae13$export$cb1538b07e6964ff","$09aee13076acae13$export$520c40045967cb15","area","$09aee13076acae13$export$dd1bc94b04021eeb","$09aee13076acae13$export$3c49c185de0c2bfc","$09aee13076acae13$export$c08559766941f856","$09aee13076acae13$export$c91255cadecfe081","$09aee13076acae13$export$a1cfd206661d0801","corner","$09aee13076acae13$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$09aee13076acae13$export$72209efa88586d42","intersection","$09aee13076acae13$export$7b0a31e10bbff018","$09aee13076acae13$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$09aee13076acae13$var$_boundingExtentXYs","$171e0dde495a42af$export$7d15b64cf5a3a4c4","$171e0dde495a42af$export$2e2fd1ad24e4d350","cosh","exp","$171e0dde495a42af$export$b9fae0bba9d9094d","log2","log","LOG2E","$171e0dde495a42af$export$251bb0a9cef172e6","t","$171e0dde495a42af$export$88e6ebb4fe54f538","$171e0dde495a42af$export$56cb859c01fa134d","angleInRadians","PI","$171e0dde495a42af$export$cba01ba138429a1d","angleInDegrees","$171e0dde495a42af$export$ba467bec01d66def","r","$171e0dde495a42af$export$3a89f8d6f6bf6c9f","$171e0dde495a42af$export$a81f732198733497","decimals","factor","pow","round","$171e0dde495a42af$export$a3fe094919f356fd","floor","$171e0dde495a42af$export$803ce6b71a0a94b2","ceil","$50211efa3313caf5$var$HEX_COLOR_RE_","$50211efa3313caf5$var$NAMED_COLOR_RE_","$50211efa3313caf5$export$590567be997858b6","color","$50211efa3313caf5$export$f84e8e69fd4488a5","$50211efa3313caf5$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$50211efa3313caf5$export$3004f64547af360e","s","hasOwnProperty","key","g","exec","hasAlpha","parseInt","substr","$50211efa3313caf5$export$a3295358bff77e","map","Number","$50211efa3313caf5$var$fromStringInternal_","$50211efa3313caf5$export$75093a47a9fa838d","undefined","$2d3f65ee78aa7b11$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","hasListener","src","crossOrigin","$2d3f65ee78aa7b11$var$getKey","set","setSize","maxCacheSize","$2d3f65ee78aa7b11$export$747ccdf771a87ab8","$23cc37b221334df5$export$2e2bcd8739ae039","BaseEvent","type","propagationStopped","defaultPrevented","preventDefault","stopPropagation","$f182d89dddef1ea8$export$2e2bcd8739ae039","$d57f519927fa72cd$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","arguments","$d57f519927fa72cd$export$42ffd38884aecdac","object","property","$d57f519927fa72cd$export$a5c4301012ad6f07","values","$d57f519927fa72cd$export$dd1bc94b04021eeb","$ca140b686b49c1e3$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$ca140b686b49c1e3$var$__extends","listener","listeners","listenersForType","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","getListeners","opt_type","keys","index","splice","$17528e13835ea298$export$2e2bcd8739ae039","$ddbfda1fb7b83a89$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$ddbfda1fb7b83a89$export$8d2a95bc11b44725","$ddbfda1fb7b83a89$export$b0a21c8b3c1c921","$b205a5a0a479f629$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$b205a5a0a479f629$var$__extends","changed","getRevision","len","ol_key","$b205a5a0a479f629$export$b7ef3f8527533384","$ca140b686b49c1e3$exports","$b205a5a0a479f629$export$2e2bcd8739ae039","$02ff1a30291f579c$export$cf395d7c4a2d5a17","oldValue","$02ff1a30291f579c$var$__extends","$02ff1a30291f579c$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","opt_silent","applyProperties","unset","$b205a5a0a479f629$exports","$de08933662e889cc$export$2e2bcd8739ae039","$abe2849bf275faed$export$2e2bcd8739ae039","BaseLayer","background_","background","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$abe2849bf275faed$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$02ff1a30291f579c$exports","$6afba345795dd0eb$export$2e2bcd8739ae039","$10a428a553b91e25$export$2e2bcd8739ae039","$3f598d8186f667d5$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$3f598d8186f667d5$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$3f598d8186f667d5$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$abe2849bf275faed$exports","$9c25d20f9d7ab135$export$e9bab7fafb253603","coordinate1","coordinate2","$9c25d20f9d7ab135$export$bb628a54ab399bc9","cosAngle","sinAngle","$9c25d20f9d7ab135$export$88e6ebb4fe54f538","coord1","coord2","$9c25d20f9d7ab135$export$39a9ce3624977b84","projection","canWrapX","worldWidth","worldsAway","$9c25d20f9d7ab135$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","$4d624cc5d18fde9b$var$expireIconCache","$4d624cc5d18fde9b$export$2e2bcd8739ae039","MapRenderer","map_","$4d624cc5d18fde9b$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","j","layer1","$3f598d8186f667d5$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$38088ea21604ea9d$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$38088ea21604ea9d$var$__extends","$71fff7b7ffdcca6e$export$981241db82723ce2","$71fff7b7ffdcca6e$export$4d4f8be70b656192","$71fff7b7ffdcca6e$export$e16017ac68d14492","$71fff7b7ffdcca6e$var$fontRegEx","RegExp","$71fff7b7ffdcca6e$var$fontRegExMatchIndex","$71fff7b7ffdcca6e$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$71fff7b7ffdcca6e$export$52ec625a6a53b6a6","$da5bbe25d8fad2eb$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$da5bbe25d8fad2eb$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$da5bbe25d8fad2eb$export$1d0aa160432dfea5","$f3299d0ba5b570c1$export$3847dfea4f8d4dfa","$f3299d0ba5b570c1$export$c495d52ee3fd74b2","$f3299d0ba5b570c1$export$17bd0c38d6ae694e","$f3299d0ba5b570c1$export$e21b4112fdc612fc","$f3299d0ba5b570c1$export$365eb9648cf19bd0","$f3299d0ba5b570c1$export$1eb2eaecacf2031e","$f3299d0ba5b570c1$export$94d53b95641b5766","$f3299d0ba5b570c1$export$cf2279a1bff62eb","$f3299d0ba5b570c1$export$40a9eeef55665a40","$f3299d0ba5b570c1$export$1d36981fcadac93b","console","warn","$f3299d0ba5b570c1$var$measureFont","measureElement","$f3299d0ba5b570c1$var$measureContext","$f3299d0ba5b570c1$export$7fdcec604f0b1fa7","$f3299d0ba5b570c1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$f3299d0ba5b570c1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$f3299d0ba5b570c1$export$4feaf6852ff92513","metrics","$f3299d0ba5b570c1$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$f3299d0ba5b570c1$export$915c7ba51467308f","$f3299d0ba5b570c1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$f3299d0ba5b570c1$var$executeLabelInstructions","drawImage","restore","$d8a652e4527f1969$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$71fff7b7ffdcca6e$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$d8a652e4527f1969$var$__extends","event_1","$38088ea21604ea9d$exports","declutterLayers","previousElement","layerIndex","sourceState","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$da5bbe25d8fad2eb$export$caeacfe04f52533a","getDataAtPixel","$4d624cc5d18fde9b$exports","$d9a0ab5d45e10d29$export$2e2bcd8739ae039","$55a45667519a063f$var$Property","$55a45667519a063f$export$a87ae6eb2761ec6d","opt_element","opt_index","$55a45667519a063f$var$__extends","$55a45667519a063f$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$fbe1f30b9b0811de$export$2f5ff21d758d25a7","$fbe1f30b9b0811de$var$__extends","$fbe1f30b9b0811de$var$Property","$fbe1f30b9b0811de$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$55a45667519a063f$exports","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$51fcb9efdec94cd2$export$2e2bcd8739ae039","MapEvent","$51fcb9efdec94cd2$var$__extends","$dcc91a0eaf5c85b1$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$dcc91a0eaf5c85b1$var$__extends","getEventPixel","getCoordinateFromPixel","$51fcb9efdec94cd2$exports","$fb224f2039acedbe$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$f7f6b6491b2890ed$export$2e2bcd8739ae039","$308a4eee2e11ac9e$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$308a4eee2e11ac9e$var$__extends","emulateClick_","pointerEvent","newEvent1","$dcc91a0eaf5c85b1$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$a85542ba6ee181e9$export$2e2bcd8739ae039","$66376b6b243d2dc1$export$2e2bcd8739ae039","$dac38e077a8a1495$export$b4af72c40fd57063","$dac38e077a8a1495$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b60da4fc04596e98$export$2e2bcd8739ae039","$286f240d744f313a$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$286f240d744f313a$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$286f240d744f313a$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$5a8dbd971169bbba$export$2e2bcd8739ae039","$02478b6026332846$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$02478b6026332846$export$1482081eec883108","$02478b6026332846$export$2e2bcd8739ae039","$282e8a7f99c41353$export$2e2bcd8739ae039","$c80cb2b125b4e0d9$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$6f70a5e237bbd780$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$a0a3dd962f5651db$export$2d2c9be8b5b863f","$a0a3dd962f5651db$export$f3928063e5e96d35","$a0a3dd962f5651db$export$21e6da8a7375dfe8","$a0a3dd962f5651db$export$ae9d6ed80df710e5","$a0a3dd962f5651db$export$d26945d1ad52feeb","tan","$a0a3dd962f5651db$var$EPSG3857Projection","EPSG3857Projection","point","$a0a3dd962f5651db$var$__extends","$a0a3dd962f5651db$export$b508d7ad9a891c1b","$a0a3dd962f5651db$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$a0a3dd962f5651db$export$8c71322ec28ed6b4","atan","$c0e91db6b9cdad65$export$21e6da8a7375dfe8","$c0e91db6b9cdad65$export$1482081eec883108","$c0e91db6b9cdad65$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$c0e91db6b9cdad65$var$__extends","$c0e91db6b9cdad65$export$b508d7ad9a891c1b","$fa1fc08946082439$var$cache","$93a9ea042b1bc378$var$transforms","$93a9ea042b1bc378$export$e16d8520af44a096","destination","sourceCode","destinationCode","$1f8fb04b1e88a5cd$export$63f2df7bd7371262","$1f8fb04b1e88a5cd$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$1f8fb04b1e88a5cd$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$51ce273c1692e987$var$showCoordinateWarning","$51ce273c1692e987$export$ed949affbc7c4223","opt_disable","$51ce273c1692e987$export$dd516654c5f598fb","$51ce273c1692e987$export$83e8ab53904f8022","$51ce273c1692e987$export$59ae956cd3e343f7","$fa1fc08946082439$export$e16d8520af44a096","$51ce273c1692e987$export$3988ae62b71be9a3","projectionLike","replace","$51ce273c1692e987$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$51ce273c1692e987$export$e3c4995a701c26a3","vertices","$51ce273c1692e987$export$eeb8392580a05a37","projections","$51ce273c1692e987$export$638ad73f7aafb913","$51ce273c1692e987$export$549167224996a0fb","defaultCode","$51ce273c1692e987$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$93a9ea042b1bc378$export$3988ae62b71be9a3","$51ce273c1692e987$export$fce0c6cfca85ed96","$51ce273c1692e987$export$51186ad6e864892a","$51ce273c1692e987$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$51ce273c1692e987$var$userProjection","$51ce273c1692e987$export$3973b77d5f6f2790","$51ce273c1692e987$export$698f563af1ba02a5","$51ce273c1692e987$export$d4b8ec0b96db1ee2","destProjection","$51ce273c1692e987$export$96bfd09e2cffb006","$51ce273c1692e987$export$494be3a3a25689ca","$51ce273c1692e987$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$892afa8da6ff9c56$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$892afa8da6ff9c56$export$f883a24d5edde77c","$6f142810539a59f0$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$6f142810539a59f0$var$getSmoothClampedResolution","$6f142810539a59f0$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$639db43e7a8d515a$export$e20fbacbb41798b","$639db43e7a8d515a$export$f883a24d5edde77c","$9a77576133df9d74$export$929e5a82286172a6","$9a77576133df9d74$export$57636bb43b1ccbb0","$9a77576133df9d74$export$9b47139b511b56e4","$9a77576133df9d74$export$45db2fc2f15997e7","$a0a3dd962f5651db$exports","PROJECTIONS","$c0e91db6b9cdad65$exports","fromEPSG4326","toEPSG4326","$6c33523acda28428$export$2e2bcd8739ae039","$93aa503286cf5212$export$b92b2dedcfff79de","opt_dest","dest","$93aa503286cf5212$export$bb628a54ab399bc9","anchor","anchorX","anchorY","k","$93aa503286cf5212$export$d73ee8ef04f5226a","$ea4264a4ff6265c9$var$tmpTransform","$ea4264a4ff6265c9$var$Geometry","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","$ea4264a4ff6265c9$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$09aee13076acae13$export$6a4fe494c558c238","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$ea4264a4ff6265c9$export$2e2bcd8739ae039","$873446fe266f67e7$export$6af0c1b4a8549a43","layout","$873446fe266f67e7$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$873446fe266f67e7$export$2e2bcd8739ae039","SimpleGeometry","$873446fe266f67e7$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$873446fe266f67e7$var$getLayoutForStride","$93aa503286cf5212$export$dcdf75081b88279d","$ea4264a4ff6265c9$exports","$72fefbd983bcbe6a$var$assignClosest","offset1","offset2","$72fefbd983bcbe6a$export$bc2eb611ddf80103","squaredDelta","$72fefbd983bcbe6a$export$fbf31c8f2668ed5a","ends","$72fefbd983bcbe6a$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$72fefbd983bcbe6a$export$5a48a0eefcf14992","$c8eff196dbbc07af$export$60815ead40ec79ab","$c8eff196dbbc07af$export$5c4daf67e03c190f","$c8eff196dbbc07af$export$47c3746a74384d45","coordinatess","opt_ends","jj","$c6bd32c4126fb342$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$c6bd32c4126fb342$export$cedb9900c0b225c2","simplifiedEnds","$c6bd32c4126fb342$export$51a0620f7a28532b","$c6bd32c4126fb342$export$b84e8d2c4920a0c6","$c6bd32c4126fb342$export$60a9904b67f8d51b","$680fff1ff5967196$export$9c0934e4e9c3f61e","opt_coordinates","$680fff1ff5967196$export$cbb9596fc0f40db2","opt_coordinatess","$680fff1ff5967196$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$71997ce93cb9ec89$export$3c5e1905f889266e","twiceArea","$71997ce93cb9ec89$export$7a8ee541dfdf2ed5","$d331075f6abc3caf$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$d331075f6abc3caf$var$__extends","getArea","$873446fe266f67e7$exports","$e146c4255f752222$export$2e2bcd8739ae039","Point","$e146c4255f752222$var$__extends","$a97abfe500512224$export$cedabedc7ac0e138","$a97abfe500512224$export$949a7a3a4b6f34fa","wn","$a97abfe500512224$export$ae868c0f6acc3355","$fbc665810373f014$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$1d929bbb982e7ad1$export$4b80e395e36b5a56","ret","$b9216567382fd63e$export$40d8d71841a3d779","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","$09aee13076acae13$export$a6a5a7a461419425","$b9216567382fd63e$export$76dcd8f8f83b6ddb","$b9216567382fd63e$export$830a0dafbb2ef1c5","$765add36bcb2b344$export$741858880c96b18c","$58c39c2abab0d873$export$318f2842ed17e094","edge","$58c39c2abab0d873$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$58c39c2abab0d873$export$b71b604ddfc778c7","$58c39c2abab0d873$export$ea9ed55fc2a85010","$494141410008044e$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$494141410008044e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$e146c4255f752222$exports","getLinearRingCount","getLinearRing","$d331075f6abc3caf$exports","getLinearRings","linearRings","$494141410008044e$export$2e2bcd8739ae039","$494141410008044e$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$494141410008044e$export$c16b671815801c75","$494141410008044e$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$494141410008044e$export$87d6a1539a56e47f","getRadius","startAngle","$b61ec8a9c26a15bd$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$b61ec8a9c26a15bd$var$__extends","resolutionConstraintInfo","$b61ec8a9c26a15bd$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$b61ec8a9c26a15bd$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$b61ec8a9c26a15bd$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$b61ec8a9c26a15bd$export$ee75376562060184","setHint","updateAnimations_","$b61ec8a9c26a15bd$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$b61ec8a9c26a15bd$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$494141410008044e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$6f142810539a59f0$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$6f142810539a59f0$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$b61ec8a9c26a15bd$export$2e2bcd8739ae039","$0b0c604ff213866b$export$622c471beb1693c7","$0b0c604ff213866b$export$a71a825ff42fb8e1","$e5de9654c10e65fa$var$removeLayerMapProperty","$fbe1f30b9b0811de$exports","$e5de9654c10e65fa$var$setLayerMapProperty","$e5de9654c10e65fa$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$b61ec8a9c26a15bd$exports","$e5de9654c10e65fa$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$286f240d744f313a$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$e5de9654c10e65fa$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$308a4eee2e11ac9e$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$2378f1032abec9d1$export$2e2bcd8739ae039","Control","target_","$2378f1032abec9d1$var$__extends","mapEvent","$a9244539d282f1c5$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$a9244539d282f1c5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$da5bbe25d8fad2eb$export$1e1c9bf5a4ffe0d1","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$2378f1032abec9d1$exports","$1e8af08824c3e884$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$1e8af08824c3e884$var$__extends","resetNorth_","$69299efdbde0e182$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$69299efdbde0e182$var$__extends","zoomByDelta_","currentZoom","newZoom","$fdf462d5ee425342$export$2e2bcd8739ae039","$855af52b0af99805$export$4c486572e961a974","$855af52b0af99805$export$ace321ff2a8016ef","$855af52b0af99805$export$2e2bcd8739ae039","Interaction","setActive","$855af52b0af99805$var$__extends","active","$8685060a4398cf47$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$8685060a4398cf47$var$__extends","stopEvent","shiftKey","$855af52b0af99805$exports","zoomByDelta","$71c992dd435def6e$export$e2a20c553f6c85ce","$71c992dd435def6e$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$71c992dd435def6e$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$71c992dd435def6e$var$isPointerDraggingEvent","$70da2eacd644b700$export$84bf76cd7afc7469","conditions","pass","$70da2eacd644b700$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$70da2eacd644b700$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$70da2eacd644b700$export$d7ddd398f22d79ef","$70da2eacd644b700$export$ba9e5d519bc326ca","$70da2eacd644b700$export$1238ad6b5e7fff70","$70da2eacd644b700$export$fdc892d0d8fe3bfb","$70da2eacd644b700$export$5d31fe68a477cfbb","$70da2eacd644b700$export$e5570ca80cd8fd54","tagName","$70da2eacd644b700$export$abb7acbfa76bf3c4","pointerType","$70da2eacd644b700$export$189f0d593022b199","isPrimary","$a559dc7f92aae2b9$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$a559dc7f92aae2b9$var$__extends","centroid","$71c992dd435def6e$exports","update","$9c25d20f9d7ab135$export$dcdf75081b88279d","getDistance","getAngle","centerpx","$a559dc7f92aae2b9$export$2e2bcd8739ae039","$d59c9ac61cc50ba7$export$2e2bcd8739ae039","DragRotate","lastAngle_","$d59c9ac61cc50ba7$var$__extends","$3a69a5cd3d9efe81$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$3a69a5cd3d9efe81$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$ee7f737b890585b1$var$DragBoxEventType","$ee7f737b890585b1$export$7053c33c051365ea","$ee7f737b890585b1$var$__extends","$ee7f737b890585b1$export$2e2bcd8739ae039","DragBox","box_","$3a69a5cd3d9efe81$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$8fefcee995bf9fa2$export$2e2bcd8739ae039","DragZoom","out_","out","$8fefcee995bf9fa2$var$__extends","$ee7f737b890585b1$exports","$fabc923eab7b8d35$export$2e2bcd8739ae039","$58983494123aebad$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$58983494123aebad$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$975fb2a1297d8301$export$2e2bcd8739ae039","KeyboardZoom","$975fb2a1297d8301$var$__extends","charCode","charCodeAt","$16f8404d2308a2e3$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$bf6c611fd4e916b8$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$bf6c611fd4e916b8$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$bf6c611fd4e916b8$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$116bb9adf1461407$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$116bb9adf1461407$var$__extends","rotationDelta","touch0","touch1","$59799bb9abb3d845$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$59799bb9abb3d845$var$__extends","scaleDelta","$18255666c21c3e7d$export$2e2bcd8739ae039","Map","$69299efdbde0e182$exports","zoomOptions","$1e8af08824c3e884$exports","rotateOptions","attribution","$a9244539d282f1c5$exports","attributionOptions","$c2f4f7c3a952c48b$export$ebe90cb607ad99e","altShiftDragRotate","$d59c9ac61cc50ba7$exports","doubleClickZoom","$8685060a4398cf47$exports","zoomDelta","zoomDuration","dragPan","$a559dc7f92aae2b9$exports","pinchRotate","$116bb9adf1461407$exports","pinchZoom","$59799bb9abb3d845$exports","keyboard","$58983494123aebad$exports","$975fb2a1297d8301$exports","mouseWheelZoom","$bf6c611fd4e916b8$exports","shiftDragZoom","$8fefcee995bf9fa2$exports","$73908c9ebef59c42$export$ebe90cb607ad99e","$18255666c21c3e7d$var$__extends","$d8a652e4527f1969$exports","$e5de9654c10e65fa$exports","$a7df5ae4ea1ad2c0$var$Circle","Circle","setCenterAndRadius","$a7df5ae4ea1ad2c0$var$__extends","getRadiusSquared_","setRadius","$a7df5ae4ea1ad2c0$export$2e2bcd8739ae039","$391871f9a2e5834b$export$bb06ddfd5d66e02e","styles_1","$391871f9a2e5834b$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","$391871f9a2e5834b$var$__extends","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","opt_style","setId","$7b709bd8225bc45f$export$687ff82efd78795b","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$242d04b4abe8e74a$export$2e0ae67339d5f1ac","$7b709bd8225bc45f$export$8f44c3c220ef6f09","extrapolate","lo","hi","m0","$b40fd18e7edc0f63$export$153f8c6b4d8caebc","$720fa649bbd4a7f1$export$2e2bcd8739ae039","LineString","flatMidpoint_","flatMidpointRevision_","$720fa649bbd4a7f1$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$90cf0756d213b730$export$2e2bcd8739ae039","MultiLineString","lineStrings","$90cf0756d213b730$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$7b709bd8225bc45f$export$6a3300857e9ef453","getLineString","$720fa649bbd4a7f1$exports","getLineStrings","getFlatMidpoints","midpoints","$b9216567382fd63e$export$fdb1d8e850bf7937","$f032d59bbdaf5987$export$2e2bcd8739ae039","MultiPoint","$f032d59bbdaf5987$var$__extends","appendPoint","multiPoint","getPoint","getPoints","points","$a5802c1c6fdf5753$export$2e2bcd8739ae039","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$a5802c1c6fdf5753$var$__extends","appendPolygon","newEndss","multiPolygon","$72fefbd983bcbe6a$export$37c18e6e7d50501a","$72fefbd983bcbe6a$export$60e067685eb8f9c4","$a97abfe500512224$export$c760d9d16cf92043","$71997ce93cb9ec89$export$78e139679ca7205","getEndss","getFlatInteriorPoints","$6ed455ddcc6cfa0e$export$78e139679ca7205","interiorPoints","$fbc665810373f014$export$11463803eda8a372","getInteriorPoints","$f032d59bbdaf5987$exports","$58c39c2abab0d873$export$a1d138f4bd85f4b4","simplifiedEndss","$c6bd32c4126fb342$export$b9acf67ef05cd17c","getPolygon","prevEnds","getPolygons","$b9216567382fd63e$export$77b72fa3792f5bf0","$c8eff196dbbc07af$export$f9f2bb59da4accd3","lastEnds","$4f0782892497891b$exports","t1","t2","r2","e2","a2","h2","u","p","n1","r1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","s1","l1","f1","u1","m1","d1","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","$96f1769f0e2cd014$export$2e2bcd8739ae039","$96a2d97817de77d8$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$c89ac91ebd6de9e2$export$dc5b1400ac3a10a8","$aa6f93a15af91fc4$export$2e2bcd8739ae039","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$aa6f93a15af91fc4$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$44eb67882e11d95b$export$2e2bcd8739ae039","CircleStyle","$44eb67882e11d95b$var$__extends","$aa6f93a15af91fc4$exports","$6c2904a346e8a113$export$2e2bcd8739ae039","Fill","color_","setColor","$3076747ad25995d8$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$9576ac28723638ef$var$Style","Style","geometryFunction_","$9576ac28723638ef$var$defaultGeometryFunction","image_","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$9576ac28723638ef$var$defaultStyles","$9576ac28723638ef$export$6865c5ac2f5ce8b6","$44eb67882e11d95b$exports","$9576ac28723638ef$export$ed1eaede5d0e77ac","styles","white","blue","$16d3dc96393a4cc1$var$Property","$16d3dc96393a4cc1$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$16d3dc96393a4cc1$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","styleFunction","$9576ac28723638ef$export$c314ea3f6b164147","$accd2c26c82bb2e9$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$accd2c26c82bb2e9$export$f21891651e408226","$accd2c26c82bb2e9$export$7a98aa5364d62ba8","$accd2c26c82bb2e9$export$9f746cc58a899a00","$accd2c26c82bb2e9$export$89b10f327e413e71","$accd2c26c82bb2e9$export$2e2bcd8739ae039","$8ce9a7fca4da49bf$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$5da8d3b3b24d11fc$export$2e2bcd8739ae039","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$5da8d3b3b24d11fc$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$c11bdced0b9a81c9$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$c11bdced0b9a81c9$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$5da8d3b3b24d11fc$exports","$a1c607adb44daba4$export$2e2bcd8739ae039","CanvasLineStringBuilder","$a1c607adb44daba4$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$c7cb6b0a8b35f2a7$export$2e2bcd8739ae039","CanvasPolygonBuilder","$c7cb6b0a8b35f2a7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$7a5b29aec00368aa$export$2e2bcd8739ae039","$3726f8bfced39bb2$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$690d1b56d0b26f57$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$690d1b56d0b26f57$export$2e2bcd8739ae039","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$690d1b56d0b26f57$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$b18b939817d37d3c$var$BATCH_CONSTRUCTORS","$c7cb6b0a8b35f2a7$exports","Default","$c11bdced0b9a81c9$exports","$a1c607adb44daba4$exports","Text","$690d1b56d0b26f57$exports","$b18b939817d37d3c$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$94d311d3e85a3c42$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$94d311d3e85a3c42$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$70e7b28f28588a87$var$pixelContext","$70e7b28f28588a87$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$70e7b28f28588a87$var$__extends","getImageData","col","row","clearRect","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext","pixelCanvas","Uint8Array","$94d311d3e85a3c42$exports","$f7813185a05ce2a4$export$2e2bcd8739ae039","$f21785605114342d$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$712585ac0ed150a1$var$tmpExtent","$712585ac0ed150a1$var$p1","$712585ac0ed150a1$var$p2","$712585ac0ed150a1$var$p3","$712585ac0ed150a1$var$p4","$712585ac0ed150a1$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$712585ac0ed150a1$var$rtlRegEx","fromCharCode","$712585ac0ed150a1$var$horizontalTextAlign","align","test","TEXT_ALIGN","$712585ac0ed150a1$var$createTextChunks","acc","line","$712585ac0ed150a1$export$2e2bcd8739ae039","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","reduce","_a","baseStyle","widths","heights","lineWidths","currentWidth","currentHeight","$f3299d0ba5b570c1$export$7d7c13020df1e791","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$e21e6c0c2e4854b9$var$ORDER","$e21e6c0c2e4854b9$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$e21e6c0c2e4854b9$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$e21e6c0c2e4854b9$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$e21e6c0c2e4854b9$export$2e2bcd8739ae039","$9d54967724bc5601$export$2e2bcd8739ae039","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9d54967724bc5601$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$23ee047c53fc3d1c$export$2e2bcd8739ae039","$75d6b49f100392b4$export$2e2bcd8739ae039","$c2632c8bbff4f1e5$export$2e2bcd8739ae039","ImageBase","$c2632c8bbff4f1e5$var$__extends","$8910981f7733f7b9$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$8910981f7733f7b9$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$c2632c8bbff4f1e5$exports","$64d0fe27a1c2456e$var$taintedTestContext","$64d0fe27a1c2456e$var$IconImage","IconImage","imageState_","tainted_","$64d0fe27a1c2456e$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$8910981f7733f7b9$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$64d0fe27a1c2456e$export$3988ae62b71be9a3","$4d16f53ba327d379$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize_","imgSize","iconImage_","$64d0fe27a1c2456e$exports","offset_","offsetOrigin_","offsetOrigin","$4d16f53ba327d379$var$__extends","setAnchor","iconImageSize","$21fcba48fe05b60d$export$ab51038298418f25","$963bb735b2ca135f$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$963bb735b2ca135f$export$531ddd8416d52dfc","feature1","feature2","$963bb735b2ca135f$export$bdacc5b475012edb","$963bb735b2ca135f$export$36f470a33a42f413","$963bb735b2ca135f$var$renderGeometry","$963bb735b2ca135f$var$renderFeatureInternal","getGeometries","$afbb030f8356b013$export$2e2bcd8739ae039","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$afbb030f8356b013$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$67dae15869f57ba2$export$3e4e33ea14aeb531","clipped","transforms","imageSmoothingEnabled","$9d54967724bc5601$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$4d16f53ba327d379$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$21fcba48fe05b60d$export$bd05e394339d469","resultFeatures","$21fcba48fe05b60d$export$6d4d555ddbfffa32","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$09aee13076acae13$export$39a9ce3624977b84","declutterBuilderGroup","userTransform","userExtent_1","loadFeatures","$963bb735b2ca135f$export$75084a70d324c1e6","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$70e7b28f28588a87$exports","$2682b71b2901dd5b$export$2e2bcd8739ae039","VectorLayer","$2682b71b2901dd5b$var$__extends","$afbb030f8356b013$exports","$16d3dc96393a4cc1$exports","$d501bf52a5fdb98e$export$2e2bcd8739ae039","RBush","opt_maxEntries","rbush_","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$6fd1db52bb150087$var$adaptAttributions","attributionLike","$6fd1db52bb150087$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$6fd1db52bb150087$var$__extends","getInterpolate","refresh","setAttributions","setState","$2bc97527efdad423$export$2e2bcd8739ae039","$34a16b0e54877e09$export$84bf76cd7afc7469","$cf13a6053fbfb2c4$export$2e2bcd8739ae039","$5da96d487b25628b$var$withCredentials","$5da96d487b25628b$export$14cc81df70b6707e","url","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$5da96d487b25628b$export$441d7b57adab24d0","dataProjection","addFeatures","$b636ac1ff32355bd$export$d402fd02dc2b661c","opt_feature","opt_features","$b636ac1ff32355bd$var$__extends","$b636ac1ff32355bd$export$2e2bcd8739ae039","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","$6fd1db52bb150087$exports","$16edfd57e3923baf$var$Mode","$16edfd57e3923baf$var$DrawEventType","$16edfd57e3923baf$export$85a4910380d251a7","$16edfd57e3923baf$var$__extends","$16edfd57e3923baf$export$e636e17021965266","opt_geometry","fromCircle","$a7df5ae4ea1ad2c0$exports","makeRegular","$16edfd57e3923baf$export$6459fc9e86be362e","boxCoordinates","$16edfd57e3923baf$export$2e2bcd8739ae039","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","source_","features_","snapTolerance_","snapTolerance","type_","$16edfd57e3923baf$var$getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","Constructor_1","mode_1","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","$2682b71b2901dd5b$exports","$b636ac1ff32355bd$exports","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","move","addToDrawing_","startDrawing_","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","$391871f9a2e5834b$exports","updateSketchFeatures_","createOrUpdateCustomSketchLine_","ring","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","$90cf0756d213b730$exports","$a5802c1c6fdf5753$exports","appendCoordinates","newDrawing","ending","sketchFeatures","overlaySource","$9cdf987200b0aa45$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","expireCache","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$93650dd9a7608979$export$2e2bcd8739ae039","Tile","interimTile","transition_","transition","transitionStarts_","$93650dd9a7608979$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$479dcb8db4bda8fa$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$479dcb8db4bda8fa$var$__extends","naturalWidth","naturalHeight","$93650dd9a7608979$exports","$9a1cf96a930d5a58$var$brokenDiagonalRendering_","$288c3ce7a59688cb$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$f78deeaa58c93f25$export$ab6c91696bd3263e","msImageSmoothingEnabled","$f78deeaa58c93f25$export$75f39f0ce198f93f","$9a1cf96a930d5a58$var$drawTestTriangle","v1","u2","v2","$9a1cf96a930d5a58$var$verifyBrokenDiagonalRendering","$9a1cf96a930d5a58$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$9a1cf96a930d5a58$export$b3890eb0ae9dca99","triangulation","sources","opt_renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$171e0dde495a42af$export$8240f01c446270e6","$9a1cf96a930d5a58$var$isBrokenDiagonalRendering","ud","vd","steps","$fb80bc4c69234ab8$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$9a1cf96a930d5a58$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$fb80bc4c69234ab8$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$f542b78ad7fc0677$export$958e3e1a02eac4b6","opt_tileCoord","$f542b78ad7fc0677$export$92d0df0f1d25c63c","$f542b78ad7fc0677$export$a47fb462a08de82f","$5823c018e97cb242$var$TileCache","TileCache","$5823c018e97cb242$var$__extends","pruneExceptNewestZ","$f542b78ad7fc0677$export$a807b7874eb66454","$5823c018e97cb242$export$2e2bcd8739ae039","$4f588e6ca9a89608$export$2e2bcd8739ae039","$41c1f55d86eb0ee8$var$TileRange","TileRange","containsTileRange","equals","getHeight","intersects","$41c1f55d86eb0ee8$export$958e3e1a02eac4b6","$41c1f55d86eb0ee8$export$2e2bcd8739ae039","$6986c999812c2763$var$tmpTileCoord","$6986c999812c2763$export$2e2bcd8739ae039","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$b07b4a254fd8c72a$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$b07b4a254fd8c72a$var$resolutionsFromExtent","$b07b4a254fd8c72a$export$ce88871416242df8","$b07b4a254fd8c72a$export$7b5b6ef8fd55fac4","$b07b4a254fd8c72a$export$a251b12f5601c16f","$b07b4a254fd8c72a$export$38500bbeccc864ff","xyzOptions","gridOptions","opt_maxResolution","half","$31e561e541184b11$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$5823c018e97cb242$exports","tmpSize","tileOptions","zDirection","$31e561e541184b11$var$__extends","getTileCacheForProjection","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","$b07b4a254fd8c72a$export$39a9ce3624977b84","$f542b78ad7fc0677$export$60bedf8e3e3c3dbe","updateCacheSize","tileCount","useTile","$31e561e541184b11$export$c571855c51e6c4b6","$31e561e541184b11$export$2e2bcd8739ae039","$6d3f395198882205$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$6d3f395198882205$export$436f44dbcc31fea3","templates","tileUrlFunctions","$f542b78ad7fc0677$export$d6af199866bfb566","$6d3f395198882205$export$4229b1d9af69b3be","$5625bdab397b8065$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$5625bdab397b8065$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","tileState","$31e561e541184b11$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$6d3f395198882205$export$2a1fa079bfd73dde","$3102cb6a48eb7b01$var$TileImage","TileImage","imageSmoothing","$3102cb6a48eb7b01$var$defaultTileLoadFunction","tileClass","$479dcb8db4bda8fa$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$3102cb6a48eb7b01$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$fb80bc4c69234ab8$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$5625bdab397b8065$exports","imageTile","$3102cb6a48eb7b01$export$2e2bcd8739ae039","$c7284426848359a1$export$2e2bcd8739ae039","XYZ","$c7284426848359a1$var$__extends","$3102cb6a48eb7b01$exports","$4613e68d4486e86c$export$4de8a5e77eb994ad","$4613e68d4486e86c$export$2e2bcd8739ae039","OSM","$4613e68d4486e86c$var$__extends","$c7284426848359a1$exports","$f3808ef0c21635e8$export$2e2bcd8739ae039","TileDebug","strokeRect","$f3808ef0c21635e8$var$__extends","$b8f9ef608258debf$export$2e2bcd8739ae039","$6d613fff339c23be$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$6d613fff339c23be$var$__extends","getPreload","getUseInterimTilesOnError","$dbea8b86fac5ed42$var$draw","$4d5b4b2ec243336c$export$2e2bcd8739ae039","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$4d5b4b2ec243336c$var$__extends","isDrawableTile","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","frameState1","tileSource1","postRenderFunction","opt_tileCallback","$9af931ecc3f060e8$export$2e2bcd8739ae039","TileLayer","$9af931ecc3f060e8$var$__extends","$4d5b4b2ec243336c$exports","$6d613fff339c23be$exports","$dbea8b86fac5ed42$var$source","$dbea8b86fac5ed42$var$vector","$dbea8b86fac5ed42$var$map","$18255666c21c3e7d$exports","$9af931ecc3f060e8$exports","$4613e68d4486e86c$exports","$f3808ef0c21635e8$exports","$dbea8b86fac5ed42$var$createButton","$dbea8b86fac5ed42$var$clearButton","$dbea8b86fac5ed42$var$markdirtyButton","$dbea8b86fac5ed42$var$minz","$dbea8b86fac5ed42$var$maxz","$dbea8b86fac5ed42$var$status","$dbea8b86fac5ed42$var$status_current","$dbea8b86fac5ed42$var$status_total","$dbea8b86fac5ed42$var$clearPolygon","disabled","$dbea8b86fac5ed42$var$getTilesForFeature","minz","maxz","grid","tile_coord","$dbea8b86fac5ed42$var$markTilesDirty","visibility","$dbea8b86fac5ed42$var$markNextTileDirty","baseUrl","fetch","ok","onclick","$16edfd57e3923baf$exports","onchange","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","alert","confirm","return"],"version":3,"file":"index.ab2c75bb.js.map"}